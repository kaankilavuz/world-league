// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WorldLeague.EntityFrameworkCore.PostgreSQL;

#nullable disable

namespace WorldLeague.EntityFrameworkCore.PostgreSQL.Migrations
{
    [DbContext(typeof(WorldLeagueDbContext))]
    partial class WorldLeagueDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WorldLeague.Domain.Entities.League", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatorName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreatorSurname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<short>("GroupCount")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("Leagues", (string)null);
                });

            modelBuilder.Entity("WorldLeague.Domain.Entities.League", b =>
                {
                    b.OwnsMany("WorldLeague.Domain.Entities.Group", "Groups", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b1.Property<int>("Id"));

                            b1.Property<int>("LeagueId")
                                .HasColumnType("integer");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)");

                            b1.HasKey("Id");

                            b1.HasIndex("LeagueId");

                            b1.ToTable("Groups", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("LeagueId");

                            b1.OwnsMany("WorldLeague.Domain.Entities.Team", "Teams", b2 =>
                                {
                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("integer");

                                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b2.Property<int>("Id"));

                                    b2.Property<string>("CountryCode")
                                        .IsRequired()
                                        .HasMaxLength(25)
                                        .HasColumnType("character varying(25)");

                                    b2.Property<int>("GroupId")
                                        .HasColumnType("integer");

                                    b2.Property<string>("Name")
                                        .IsRequired()
                                        .HasMaxLength(100)
                                        .HasColumnType("character varying(100)");

                                    b2.HasKey("Id");

                                    b2.HasIndex("GroupId");

                                    b2.ToTable("Teams", (string)null);

                                    b2.WithOwner()
                                        .HasForeignKey("GroupId");
                                });

                            b1.Navigation("Teams");
                        });

                    b.Navigation("Groups");
                });
#pragma warning restore 612, 618
        }
    }
}
